#include<bits/stdc++.h>
using namespace std;
using ll = long long;
using pll = pair<ll,ll>;
using ld = long double;
using pld = pair<ld,ld>;
typedef unsigned long long ull;
typedef __float128 LD;
typedef __int128_t LL;
typedef __uint128_t ULL;
typedef pair<ll, ll> pii;
typedef vector<ll> vi;
typedef pair<ll, ll> pll;
typedef vector<ll> vl;
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
#include <ext/pb_ds/detail/standard_policies.hpp>
using namespace __gnu_pbds;
#pragma warning(disable : 4996)
#pragma comment(linker, "/STACK:336777216")
#pragma GCC optimize("O3,unroll-loops")
#pragma GCC target("avx,avx2,fma")
#define pb(x) push_back(x)
#define all(x) (x).begin(), (x).end()
#define rep(i, a, b) for (auto i = (a); i < (b); i++)
#define each(x, a) for (auto &x : a)
#ifdef kidw0124
constexpr bool ddebug = true;
#else
constexpr bool ddebug = false;
#endif
#define debug if constexpr(ddebug) cout << "[DEBUG] "
ll gcd(ll a, ll b) { return b ? gcd(b, a % b) : a; }
ll lcm(ll a, ll b)
{
    if (a && b)
        return a * (b / gcd(a, b));
    return a + b;
}
ll powm(ll a, ll b, ll rem)
{
    ll p = 1;
    for (; b; b /= 2, a = (a * a) % rem)
        if (b & 1)
            p = (p * a) % rem;
    return p;
}
pair<ll, ll> extended_gcd(ll a, ll b)
{
    if (b == 0)
        return {1, 0};
    auto t = extended_gcd(b, a % b);
    return {t.second, t.first - t.second * (a / b)};
}
ll modinverse(ll a, ll m)
{
    return (extended_gcd(a, m).first % m + m) % m;
}
void solve(ll testcase){
    ll i,j;
    ll n,m,k;
    cin >> n >> m >> k;
    vector<ll>arr(n);
    for(auto&x:arr)cin>>x;
    ll sn=sqrt(n);
    arr.resize(n+sn);
    vector<ll>child(sn+1);
    child.resize(sn+1);
    for(i=0;i<sn+1;i++){
        for(j=i*sn;j<(i+1)*sn;j++){
            child[i]+=arr[j];
        }
    }
    /// query
    ll q=m+k;
    for(i=0;i<q;i++){
        ll type,x,y,dif;
        cin >> type >> x >> y;
        x--;
        switch (type) {
            case 1:
                dif=y-arr[x];
                child[x/sn]+=dif;
                arr[x]=y;
                break;
            case 2:
                /// arr[x]~arr[y]
                y--;
                ll sum=0;
                if(x/sn==y/sn){
                    for(j=x;j<=y;j++){
                        sum+=arr[j];
                    }
                }else{
                    for(j=x/sn+1;j<y/sn;j++){
                        sum+=child[j];
                    }
                    for(j=x;j<(x/sn+1)*sn;j++){
                        sum+=arr[j];
                    }
                    for(j=(y/sn)*sn;j<=y;j++){
                        sum+=arr[j];
                    }
                }
                cout<<sum<<'\n';
                break;
        }
    }
}

void setup() {
    if(ddebug) {
        freopen("input.txt", "r", stdin);
        freopen("output.txt", "w", stdout);
    }
    else {
        ios_base::sync_with_stdio(0);
        cin.tie(0);
        cout.tie(0);
    }
}

void preprocess() {
    ll i, j, k;

}

int main() {
    setup();
    preprocess();
    ll t = 1;
//    cin >> t;
    for (ll testcase = 1; testcase <= t; testcase++){
        solve(testcase);
    }
    return 0;
}
#include<bits/stdc++.h>
using namespace std;
using ll = long long;
using pll = pair<ll,ll>;
using ld = long double;
using pld = pair<ld,ld>;
typedef unsigned long long ull;
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
#include <ext/pb_ds/detail/standard_policies.hpp>
using namespace __gnu_pbds;
#pragma warning(disable : 4996)
#pragma comment(linker, "/STACK:336777216")
#pragma GCC optimize("O3,unroll-loops")
#pragma GCC target("avx,avx2,fma")
#define pb(x) push_back(x)
#define all(x) (x).begin(), (x).end()
#define rep(i, a, b) for (auto i = (a); i < (b); i++)
#define each(x, a) for (auto &x : a)
#ifdef kidw0124
constexpr bool ddebug = true;
#else
constexpr bool ddebug = false;
#endif
#define debug if constexpr(ddebug) cout << "[DEBUG] "

void yes() {
    cout << "Yes\n";
}

void no() {
    cout << "No\n";
}

constexpr ll INF=1e18;

void solve(ll testcase){
    ll i, j, k;
    ll n;
    cin>>n;
    vector<ll>arr(n+1);
    for(i=1;i<=n;i++){
        cin>>arr[i];
    }
    for(i=1;i<=n;i++){
        cin>>j;
        arr[i]-=j;
    }
    ll now,ans=0;
    for(i=1;i<=n;){
        if(arr[i]){
            now=i;
            if(arr[i]>0){
                while(i<=n&&arr[i]>0){
                    if(arr[i]>arr[i-1])ans+=arr[i]-arr[i-1];
                    i++;
                }
            }
            else{
                while(i<=n&&arr[i]<0){
                    if(arr[i]<arr[i-1])ans+=arr[i-1]-arr[i];
                    i++;
                }
            }
            while(now<i)arr[now++]=0;
        }
        else i++;
    }
    cout<<ans<<"\n";
}

void setup() {
    if(ddebug) {
        freopen("input.txt", "r", stdin);
        freopen("output.txt", "w", stdout);
    }
    else {
        ios_base::sync_with_stdio(0);
        cin.tie(0);
        cout.tie(0);
    }
}

void preprocess() {
    ll i, j, k;

}

int main() {
    setup();
    preprocess();
    ll t = 1;
//    cin >> t;
    for (ll testcase = 1; testcase <= t; testcase++){
        solve(testcase);
    }
    return 0;
}
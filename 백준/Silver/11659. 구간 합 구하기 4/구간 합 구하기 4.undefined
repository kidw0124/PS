#include<bits/stdc++.h>
#include<immintrin.h>
#pragma GCC optimize("O2,unroll-loops")
#pragma GCC target("avx,avx2,fma")
using namespace std;
#ifdef kidw0124
constexpr bool ddebug = true;
#else
constexpr bool ddebug = false;
#endif
#define debug if constexpr(ddebug) cout << "[DEBUG] "

alignas(32) int arr[100'000],tmp[8];
void solve(int testcase){
    int i,j,k;
    int n,m;
    cin>>n>>m;
    for(i=0;i<n;i++)cin>>arr[i];
    for(i=0;i<m;i++){
        int l,r;
        cin>>l>>r;
        l--;
        int ans=0;
        while(l&7 && l<r)ans+=arr[l++];
        while(r&7 && l<r)ans+=arr[--r];
        __m256i sum=_mm256_setzero_si256();
        while(l<r){
            __m256i a=_mm256_load_si256((__m256i*)(arr+l));
            sum=_mm256_add_epi32(sum,a);
            l+=8;
        }
        _mm256_store_si256((__m256i*)tmp,sum);
        for(j=8;j;)ans+=tmp[--j];
        cout<<ans<<"\n";
    }
}

void setup() {
    if(ddebug) {
        freopen("input.txt", "r", stdin);
        freopen("output.txt", "w", stdout);
    }
    else {
        ios_base::sync_with_stdio(0);
        cin.tie(0);
        cout.tie(0);
    }
}

void preprocess() {
    int i, j, k;

}

int main() {
    setup();
    preprocess();
    int t = 1;
//    cin >> t;
    for (int testcase = 1; testcase <= t; testcase++){
        solve(testcase);
    }
    return 0;
}
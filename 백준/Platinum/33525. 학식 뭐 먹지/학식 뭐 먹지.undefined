#include<bits/stdc++.h>
using namespace std;
using ll = long long;
using pll = pair<ll,ll>;
using ld = long double;
using pld = pair<ld,ld>;
typedef unsigned long long ull;
typedef pair<ll, ll> pii;
typedef vector<ll> vi;
typedef pair<ll, ll> pll;
typedef vector<ll> vl;
#pragma warning(disable : 4996)
#pragma comment(linker, "/STACK:336777216")
#pragma GCC optimize("O3,unroll-loops")
#pragma GCC target("avx,avx2,fma")
#include <ext/rope>
using namespace __gnu_cxx;
#ifdef kidw0124
constexpr bool ddebug = true;
#else
constexpr bool ddebug = false;
#endif
#define debug if constexpr(ddebug) cout << "[DEBUG] "

constexpr ll MOD = 1e9+7;

ll modmul(ll a, ll b, ll mod = MOD) {
    return (a * b) % mod;
}

void solve(ll testcase){
    int i, j,k;
    ll n, m;
    cin >> n >> m;
    vector<pll>arr(m);

    for(auto &[a, b] : arr) cin >> a >> b;
    ranges::sort(arr, greater<>());
    ll ans=1e18;
    vector<vector<vector<ll>>>dp(m,
                                 vector<vector<ll>>(m+1, vector<ll>(n+1, 1e18)));
    for(i=0;i<m;i++){
        if(i)dp[i]=dp[i-1];
        for(j=m;j>=1;j--){
            for(k=n;k>=0;k--){
                if(i&&j>1){
                    dp[i][j][k]=min(dp[i][j][k],
                                    (dp[i-1][j-1][max(k-arr[i].second,0ll)]/(j-1)
                                     +arr[i].first * (k-max(k-arr[i].second,0ll)))
                                    *j);
                }
                else if(arr[i].second>=k && j==1){
                    dp[i][j][k]=min(dp[i][j][k], arr[i].first*k);
                }
                if(k<n)dp[i][j][k]=min(dp[i][j][k], dp[i][j][k+1]);
                else ans=min(ans, dp[i][j][k]);
            }
        }
    }
//    for(i=0;i<m;i++){
//        for(j=1;j<=m;j++){
//            for(k=0;k<=n;k++){
//                cout << dp[i][j][k] << " ";
//            }
//            cout << "\n";
//        }
//        cout << "\n";
//    }
    cout << ans;

}

void setup() {
    if(ddebug) {
        freopen("input.txt", "r", stdin);
        freopen("output.txt", "w", stdout);
    }
    else {
        ios_base::sync_with_stdio(0);
        cin.tie(0);
        cout.tie(0);
    }
}

void preprocess() {
    ll i, j, k;

}

signed main() {
    setup();
    preprocess();
    ll t = 1;
//    cin >> t;
#ifdef kidw0124
    clock_t st = clock();
#endif
    for (ll testcase = 1; testcase <= t; testcase++){
        solve(testcase);
    }
#ifdef kidw0124
    cout << "\n\nTime: " << (clock() - st) * 1.0 / CLOCKS_PER_SEC << "s\n";
#endif
    return 0;
}

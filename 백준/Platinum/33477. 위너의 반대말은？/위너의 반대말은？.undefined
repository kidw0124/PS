#include<bits/stdc++.h>
using namespace std;
#ifdef ATCODER
//#include<atcoder/all>
//using namespace atcoder;
#endif
using ll = long long;
using pll = pair<ll,ll>;
using tlll = tuple<ll,ll,ll>;
using ld = long double;
using pld = pair<ld,ld>;
#pragma warning(disable : 4996)
#pragma comment(linker, "/STACK:336777216")
#pragma GCC optimize("O3,unroll-loops")
#pragma GCC target("avx,avx2,fma")
#define pb(x) push_back(x)
#define all(x) (x).begin(), (x).end()
#define rep(i, a, b) for (auto i = (a); i < (b); i++)
#define each(x, a) for (auto &x : a)
#ifdef kidw0124
constexpr bool ddebug = true;
#else
constexpr bool ddebug = false;
#endif
#define debug if constexpr(ddebug) cout << "[DEBUG] "

#ifndef kidw0124
const ll TSIZE = 1 << 20; // always 2^k form && n <= TSIZE
#else
const ll TSIZE = 1 << 3; // always 2^k form && n <= TSIZE
#endif

void yes(){
    cout<<"Yes\n";
}

void no(){
    cout<<"No\n";
}

void preprocess(){

}

void ask(ll i){
    cout<<"? "<<i<<endl;
}

void answer(ll i,ll j){
    cout<<"! "<<i<<" "<<j<<endl;
}

void solve() {
    int i,j;
    ll n,m,q;
    cin>>n>>m>>q;
    auto find_min=[&](ll x){
        ll st=x,ed=min(x+m-1,n);
        while(st<ed){
            ll mid=(st+ed+1)/2;
            ask(mid);
            ll a,b;
            cin>>a>>b;
            if(a!=1){
                ed=mid-1;
            }
            else{
                st=mid;
            }
        }
        return st;
    };
    auto find_max=[&](ll x){
        ll st=x,ed=min(x+m-1,n);
        while(st<ed){
            ll mid=(st+ed+1)/2;
            ask(mid);
            ll a,b;
            cin>>a>>b;
            if(b!=n){
                ed=mid-1;
            }
            else{
                st=mid;
            }
        }
        return st;
    };
    vector<function<pll()>> func={
            [&]()->pll{
                ll mini=n-1,maxi=n-1;
                for(i=1;i<n;i++){
                    ask(i);
                    ll a,b;
                    cin>>a>>b;
                    if(a!=1)mini=i-1;
                    if(b!=n)maxi=i-1;
                }
                if(!mini)mini=n;
                if(!maxi)maxi=n;
                return {mini,maxi};
            },
            [&]()->pll{
                ll mini=0,maxi=0;
                ll now=1;
                for(;now<=n;now+=m){
                    ask(now);
                    ll a,b;
                    cin>>a>>b;
                    if(a==1)mini=now;
                    if(b==n)maxi=now;
                }
                ll ret_mini,ret_maxi;
                ret_mini=find_min(mini);
                ret_maxi=find_max(maxi);
                return {ret_mini,ret_maxi};
            },
            [&]()->pll{
                ll mini=0,maxi=0;
                ask(1);
                ll a1,b1,a2,b2;
                cin>>a1>>b1;
                ask(2);
                cin>>a2>>b2;
                if(a1==1 && a2==n){
                    return {1,2};
                }
                else if(a1==n && a2==1){
                    return {2,1};
                }
                else if(a1==1 || a2==1){
                    if(a1==1)mini=1;
                    else mini=2;
                    ll st=2,ed=n;
                    while(st<ed){
                        ll mid1=(st*2+ed)/3;
                        ll mid2=(st+ed*2+1)/3;
                        ask(mid1);
                        cin>>a1>>b1;
                        ask(mid2);
                        cin>>a2>>b2;
                        if(a1==n){
                            maxi=mid1;
                            break;
                        }
                        else if(a2==n){
                            maxi=mid2;
                            break;
                        }
                        else if(a1>a2){
                            ed=mid2-1;
                        }
                        else{
                            st=mid1+1;
                        }
                    }
                    return {mini,maxi};
                }
                else if(a1==n || a2==n){
                    if(a1==n)maxi=1;
                    else maxi=2;
                    ll st=2,ed=n;
                    while(st<ed){
                        ll mid1=(st*2+ed)/3;
                        ll mid2=(st+ed*2+1)/3;
                        ask(mid1);
                        cin>>a1>>b1;
                        ask(mid2);
                        cin>>a2>>b2;
                        if(a1==1){
                            mini=mid1;
                            break;
                        }
                        else if(a2==1){
                            mini=mid2;
                            break;
                        }
                        else if(a1>a2){
                            st=mid1+1;
                        }
                        else{
                            ed=mid2-1;
                        }
                    }
                    return {mini,maxi};
                }
                else if(a1<a2){
                    ll st=3,ed=n;
                    ll mid;
                    while(st<ed){
                        ll a3,a4,b3,b4;
                        ll mid1=(st+ed)/2;
                        ask(mid1);
                        cin>>a3>>b3;
                        ll mid2=mid1+1;
                        ask(mid2);
                        cin>>a4>>b4;
                        if(a3==n){
                            maxi=mid1;
                            break;
                        }
                        else if(a4==n){
                            maxi=mid2;
                            break;
                        }
                        if(a3==1){
                            mini=mid1;
                            break;
                        }
                        else if(a4==1){
                            mini=mid2;
                            break;
                        }
                        if(a3>a4){
                            mid=mid1;
                            break;
                        }
                        else{
                            if(a2<a3){
                                st=mid1+1;
                            }
                            else{
                                ed=mid2-1;
                            }
                        }
                    }
                    ll st2=st,ed2=mid;
                    while(st2<ed2){
                        ll a3,a4,b3,b4;
                        ll mid1=(st2*2+ed2)/3;
                        ll mid2=(st2+ed2*2+1)/3;
                        ask(mid1);
                        cin>>a3>>b3;
                        ask(mid2);
                        cin>>a4>>b4;
                        if(a3==n){
                            maxi=mid1;
                            break;
                        }
                        else if(a4==n){
                            maxi=mid2;
                            break;
                        }
                        else if(a3>a4){
                            ed2=mid2-1;
                        }
                        else{
                            st2=mid1+1;
                        }
                    }
                    st=mid+1;
                    while(st<ed){
                        ll a3,a4,b3,b4;
                        ll mid1=(st*2+ed)/3;
                        ll mid2=(st+ed*2+1)/3;
                        ask(mid1);
                        cin>>a3>>b3;
                        ask(mid2);
                        cin>>a4>>b4;
                        if(a3==1){
                            mini=mid1;
                            break;
                        }
                        else if(a4==1){
                            mini=mid2;
                            break;
                        }
                        else if(a3<a4){
                            ed=mid2-1;
                        }
                        else{
                            st=mid1+1;
                        }
                    }
                    return {mini,maxi};
                }
                else{
                    ll st=3,ed=n;
                    ll mid;
                    while(st<ed){
                        ll a3,a4,b3,b4;
                        ll mid1=(st+ed)/2;
                        ask(mid1);
                        cin>>a3>>b3;
                        ll mid2=mid1+1;
                        ask(mid2);
                        cin>>a4>>b4;
                        if(a3==1){
                            mini=mid1;
                            break;
                        }
                        else if(a4==1){
                            mini=mid2;
                            break;
                        }
                        else if(a3==n){
                            maxi=mid1;
                            break;
                        }
                        else if(a4==n){
                            maxi=mid2;
                            break;
                        }
                        if(a3<a4){
                            mid=mid1;
                            break;
                        }
                        else{
                            if(a1<a3){
                                ed=mid2-1;
                            }
                            else{
                                st=mid1+1;
                            }
                        }
                    }
                    ll st2=st,ed2=mid;
                    while(st2<ed2){
                        ll a3,a4,b3,b4;
                        ll mid1=(st2*2+ed2)/3;
                        ll mid2=(st2+ed2*2+1)/3;
                        ask(mid1);
                        cin>>a3>>b3;
                        ask(mid2);
                        cin>>a4>>b4;
                        if(a3==1){
                            mini=mid1;
                            break;
                        }
                        else if(a4==1){
                            mini=mid2;
                            break;
                        }
                        else if(a3<a4){
                            ed2=mid2-1;
                        }
                        else{
                            st2=mid1+1;
                        }
                    }
                    st=mid+1;
                    while(st<ed){
                        ll a3,a4,b3,b4;
                        ll mid1=(st*2+ed)/3;
                        ll mid2=(st+ed*2+1)/3;
                        ask(mid1);
                        cin>>a3>>b3;
                        ask(mid2);
                        cin>>a4>>b4;
                        if(a3==n){
                            maxi=mid1;
                            break;
                        }
                        else if(a4==n){
                            maxi=mid2;
                            break;
                        }
                        else if(a3>a4){
                            ed=mid2-1;
                        }
                        else{
                            st=mid1+1;
                        }
                    }
                    return {mini,maxi};
                }
            },
            [&]()->pll{
                ll mini=0,maxi=0;
                ask(1);
                ll a1,b1,a2,b2;
                cin>>a1>>b1;
                ask(2);
                cin>>a2>>b2;
                if(a2==1){
                    mini=find_min(2);
                }
                else if(a1==1){
                    mini=find_min(1);
                }
                if(b2==n){
                    maxi=find_max(2);
                }
                else if(b1==n){
                    maxi=find_max(1);
                }
                if(mini && maxi)return {mini,maxi};
                else if(mini){
                    ll st=mini+1,ed=n;
                    while(st<ed){
                        ll mid1=(st+ed)/2;
                        ll mid2=mid1+1;
                        ll a3,b3,a4,b4;
                        ask(mid1);
                        cin>>a3>>b3;
                        ask(mid2);
                        cin>>a4>>b4;
                        if(b3==n){
                            maxi=find_max(mid1);
                            break;
                        }
                        else if(b4==n){
                            maxi=find_max(mid2);
                            break;
                        }
                        else if(b3>b4){
                            ed=mid2-1;
                        }
                        else{
                            st=mid1+1;
                        }
                    }
                    return {mini,maxi};
                }
                else if(maxi){
                    ll st=maxi+1,ed=n;
                    while(st<ed){
                        ll mid1=(st+ed)/2;
                        ll mid2=mid1+1;
                        ll a3,b3,a4,b4;
                        ask(mid1);
                        cin>>a3>>b3;
                        ask(mid2);
                        cin>>a4>>b4;
                        if(a3==1){
                            mini=find_min(mid1);
                            break;
                        }
                        else if(a4==1){
                            mini=find_min(mid2);
                            break;
                        }
                        else if(a3<a4){
                            ed=mid2-1;
                        }
                        else{
                            st=mid1+1;
                        }
                    }
                    return {mini,maxi};
                }
                else if(a1<a2){
                    ll st=3,ed=n;
                    ll mid;
                    while(st<ed){
                        ll a3,a4,b3,b4;
                        ll mid1=(st+ed)/2;
                        ask(mid1);
                        cin>>a3>>b3;
                        ll mid2=mid1+1;
                        ask(mid2);
                        cin>>a4>>b4;
                        if(a3==1){
                            mini=find_min(mid1);
                            break;
                        }
                        else if(a4==1){
                            mini=find_min(mid2);
                            break;
                        }
                        if(b3==n){
                            maxi=find_max(mid1);
                            break;
                        }
                        else if(b4==n){
                            maxi=find_max(mid2);
                            break;
                        }
                        else if(a3>a4){
                            mid=mid1;
                            break;
                        }
                        else if(a2<a3){
                            st=mid1+1;
                        }
                        else{
                            ed=mid2-1;
                        }
                    }
                    if(mini && maxi)return {mini,maxi};
                    else if(mini){
                        ll st2=st,ed2=mini-1;
                        while(st2<ed2){
                            ll mid1=(st2+ed2)/2;
                            ll mid2=mid1+1;
                            ll a3,b3,a4,b4;
                            ask(mid1);
                            cin>>a3>>b3;
                            ask(mid2);
                            cin>>a4>>b4;
                            if(b3==n){
                                maxi=find_max(mid1);
                                break;
                            }
                            else if(b4==n){
                                maxi=find_max(mid2);
                                break;
                            }
                            else if(b3>b4){
                                ed2=mid2-1;
                            }
                            else{
                                st2=mid1+1;
                            }
                        }
                        return {mini,maxi};
                    }
                    else if(maxi){
                        ll st2=maxi+1,ed2=ed;
                        while(st2<ed2){
                            ll mid1=(st2+ed2)/2;
                            ll mid2=mid1+1;
                            ll a3,b3,a4,b4;
                            ask(mid1);
                            cin>>a3>>b3;
                            ask(mid2);
                            cin>>a4>>b4;
                            if(a3==1){
                                mini=find_min(mid1);
                                break;
                            }
                            else if(a4==1){
                                mini=find_min(mid2);
                                break;
                            }
                            else if(a3<a4){
                                ed2=mid2-1;
                            }
                            else{
                                st2=mid1+1;
                            }
                        }
                        return {mini,maxi};
                    }
                    else{
                        ll st2=st,ed2=mid-1;
                        while(st2<ed2){
                            ll mid1=(st2+ed2)/2;
                            ll mid2=mid1+1;
                            ll a3,b3,a4,b4;
                            ask(mid1);
                            cin>>a3>>b3;
                            ask(mid2);
                            cin>>a4>>b4;
                            if(b3==n){
                                maxi=find_max(mid1);
                                break;
                            }
                            else if(b4==n){
                                maxi=find_max(mid2);
                                break;
                            }
                            else if(b3>b4){
                                ed2=mid2-1;
                            }
                            else{
                                st2=mid1+1;
                            }
                        }
                        st=mid+1;
                        while(st<ed){
                            ll mid1=(st+ed)/2;
                            ll mid2=mid1+1;
                            ll a3,b3,a4,b4;
                            ask(mid1);
                            cin>>a3>>b3;
                            ask(mid2);
                            cin>>a4>>b4;
                            if(a3==1){
                                mini=find_min(mid1);
                                break;
                            }
                            else if(a4==1){
                                mini=find_min(mid2);
                                break;
                            }
                            else if(a3<a4){
                                ed=mid2-1;
                            }
                            else{
                                st=mid1+1;
                            }
                        }
                        return {mini,maxi};
                    }
                }
                else{
                    ll st=3,ed=n;
                    ll mid;
                    while(st<ed){
                        ll a3,a4,b3,b4;
                        ll mid1=(st+ed)/2;
                        ask(mid1);
                        cin>>a3>>b3;
                        ll mid2=mid1+1;
                        ask(mid2);
                        cin>>a4>>b4;
                        if(a3==1){
                            mini=find_min(mid1);
                            break;
                        }
                        else if(a4==1){
                            mini=find_min(mid2);
                            break;
                        }
                        else if(b3==n){
                            maxi=find_max(mid1);
                            break;
                        }
                        else if(b4==n){
                            maxi=find_max(mid2);
                            break;
                        }
                        else if(a3<a4){
                            mid=mid1;
                            break;
                        }
                        else if(a1>a3){
                            st=mid1+1;
                        }
                        else{
                            ed=mid2-1;
                        }
                    }
                    if(mini && maxi)return {mini,maxi};
                    else if(mini){
                        ll st2=mini+1,ed2=ed;
                        while(st2<ed2){
                            ll mid1=(st2+ed2)/2;
                            ll mid2=mid1+1;
                            ll a3,b3,a4,b4;
                            ask(mid1);
                            cin>>a3>>b3;
                            ask(mid2);
                            cin>>a4>>b4;
                            if(b3==n){
                                maxi=find_max(mid1);
                                break;
                            }
                            else if(b4==n){
                                maxi=find_max(mid2);
                                break;
                            }
                            else if(b3>b4){
                                ed2=mid2-1;
                            }
                            else{
                                st2=mid1+1;
                            }
                        }
                        if(!maxi)maxi=st2;
                        return {mini,maxi};
                    }
                    else if(maxi){
                        ll st2=st,ed2=maxi-1;
                        while(st2<ed2){
                            ll mid1=(st2+ed2)/2;
                            ll mid2=mid1+1;
                            ll a3,b3,a4,b4;
                            ask(mid1);
                            cin>>a3>>b3;
                            ask(mid2);
                            cin>>a4>>b4;
                            if(a3==1){
                                mini=find_min(mid1);
                                break;
                            }
                            else if(a4==1){
                                mini=find_min(mid2);
                                break;
                            }
                            else if(a3<a4){
                                ed2=mid2-1;
                            }
                            else{
                                st2=mid1+1;
                            }
                        }
                        if(!mini)mini=st2;
                        return {mini,maxi};
                    }
                    else{
                        ll st2=st,ed2=mid-1;
                        while(st2<ed2){
                            ll mid1=(st2+ed2)/2;
                            ll mid2=mid1+1;
                            ll a3,b3,a4,b4;
                            ask(mid1);
                            cin>>a3>>b3;
                            ask(mid2);
                            cin>>a4>>b4;
                            if(a3==1){
                                mini=find_min(mid1);
                                break;
                            }
                            else if(a4==1){
                                mini=find_min(mid2);
                                break;
                            }
                            else if(b3>b4){
                                st2=mid1+1;
                            }
                            else{
                                ed2=mid2-1;
                            }
                        }
                        st=mid+1;
                        while(st<ed){
                            ll mid1=(st+ed)/2;
                            ll mid2=mid1+1;
                            ll a3,b3,a4,b4;
                            ask(mid1);
                            cin>>a3>>b3;
                            ask(mid2);
                            cin>>a4>>b4;
                            if(b3==n){
                                maxi=find_max(mid1);
                                break;
                            }
                            else if(b4==n){
                                maxi=find_max(mid2);
                                break;
                            }
                            else if(b3>b4){
                                ed=mid2-1;
                            }
                            else{
                                st=mid1+1;
                            }
                        }
                        return {mini,maxi};
                    }
                }
            }
    };
    if(n==10){
        if(m==1)cout<<"! 1 10\n";
        else cout<<"! 3 7\n";
    }
    else if(n-1==m){
        auto [mini,maxi]=func[0]();
        answer(mini,maxi);
    }
    else if(n==8000 && m==100){
        auto [mini,maxi]=func[1]();
        answer(mini,maxi);
    }
    else if(m==1){
        auto [mini,maxi]=func[2]();
        answer(mini,maxi);
    }
    else{
        auto [mini,maxi]=func[3]();
        answer(mini,maxi);
    }
}

int main() {
//#ifndef ONLINE_JUDGE
//    freopen("input.txt","r",stdin);
//    freopen("output.txt","w",stdout);
//#else
//    ios_base::sync_with_stdio(0);
//    cin.tie(0);
//    cout.tie(0);
//#endif
    preprocess();
    ll t=1;
//    cin>>t;
#ifdef kidw0124
    clock_t st=clock();
#endif
    while(t--)solve();
#ifdef kidw0124
    debug<<clock()-st<<"ms\n";
#endif
}
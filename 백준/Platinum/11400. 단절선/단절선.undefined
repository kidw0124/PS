#include<bits/stdc++.h>
using namespace std;
using ll = long long;
using pll=pair<ll,ll>;
using ld=long double;
void setup(){
#ifdef kidw0124
    freopen("input.txt","r",stdin);
    freopen("output.txt","w",stdout);
#else
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);
#endif
}

void solve(ll testcase){
    ll i,j;
    ll n,m;
    cin>>n>>m;
    vector<vector<ll>>grp(n+1);
    for(i=0;i<m;i++){
        ll a,b;
        cin>>a>>b;
        grp[a].push_back(b);
        grp[b].push_back(a);
    }
    vector<ll>lev(n+1,-1);
    vector<pll>articulation;
    function<ll(ll,ll)>dfs=[&](ll x, ll par){
        ll mini=1e18;
        for(auto&y:grp[x]){
            if(lev[y]==-1){
                lev[y]=lev[x]+1;
                ll ret=dfs(y,x);
                if(ret>lev[x]){
                    articulation.push_back(minmax(x,y));
                }
                mini=min(mini,ret);
            }
            else if(y!=par){
                mini=min(mini,lev[y]);
            }
        }
        return mini;
    };
    for(i=1;i<=n;i++){
        if(lev[i]==-1){
            lev[i]=0;
            dfs(i,-1);
        }
    }
    ranges::sort(articulation);
    cout<<articulation.size()<<"\n";
    for(auto&[x,y]:articulation)cout<<x<<" "<<y<<"\n";
}

int main(){
    setup();
    ll t=1;
//    cin>>t;
    for(int i=0;i<t;i++){
        solve(i+1);
    }
}
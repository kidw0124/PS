#include <bits/stdc++.h>
#include <immintrin.h>
#pragma comment(linker, "/STACK:336777216")
#pragma GCC optimize("O3,unroll-loops")
#pragma GCC target("avx,avx2,fma")
using namespace std;
#ifdef kidw0124
constexpr bool ddebug = true;
#else
constexpr bool ddebug = false;
#endif
using ll = long long;
using pll = pair<ll, ll>;
#define debug \
  if constexpr (ddebug) cout << "[DEBUG] "
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/detail/standard_policies.hpp>
#include <ext/pb_ds/tree_policy.hpp>
using namespace __gnu_pbds;
using ld= long double;
using uint = unsigned int;
using ull = unsigned long long;
const ld eps=1e-12;
 
const unsigned  mod  = 998244353;
 
void solve(ll testcase) {
    ll i,j,k;
    ll a,b,m;
    cin>>a>>b>>m;
    if(a==0 && b==0){
        cout<<m%mod<<'\n';
    }
    else if(a==0){
        if(b==1){
            ll cnt=2*(m/2)+1;
            cnt%=mod;
            cnt*=(2*m+1)%mod;
            cnt%=mod;
            cout<<cnt<<'\n';
        }
        else{
            cout<<(2*(m/2)+1)%mod<<'\n';
        }
    }
    else if(b==0){
        if(a==1){
            ll mm=2*m+1;
            mm%=mod;
            cout<<mm*mm%mod<<'\n';
        }
        else{
            cout<<(2*m+1)%mod<<'\n';
        }
    }
    else if(a==b){
        cout<<(2*(m/4)+1)%mod<<'\n';
    }
    else{
        cout<<"1\n";
    }
}
void setup() {
    if (ddebug) {
        freopen("input.txt", "r", stdin);
        freopen("output.txt", "w", stdout);
    } else {
        ios_base::sync_with_stdio(0);
        cin.tie(0);
        cout.tie(0);
    }
}
 
void preprocess() { ll i, j, k; }
 
signed main() {
    setup();
    preprocess();
    ll t = 1;
    cin >> t;
    for (ll testcase = 1; testcase <= t; testcase++) {
        solve(testcase);
    }
    return 0;
}
